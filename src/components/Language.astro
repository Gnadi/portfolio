---
---
<language-dropdown>
    <div class="relative inline-block text-left">
        <div>
            <button type="button"
                    class="nav-items inline-flex w-full justify-center gap-x-1.5 rounded-md px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50"
                    id="menu-button" aria-expanded="true" aria-haspopup="true">
                <span class="cur-language" id="currentLanguage">EN</span>
                <svg class="-mr-1 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z"
                          clip-rule="evenodd"/>
                </svg>
            </button>
        </div>

        <div id="menu-elements"
             class="nav-items1 absolute right-0 z-10 mt-2 w-35 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none"
             role="menu" aria-orientation="vertical" aria-labelledby="menu-button" tabindex="-1">
            <div class="d-flex justify-center py-1" role="none">
                <a href="/de" class="block px-4 py-2 text-sm" role="menuitem" tabindex="-1"
                   id="menu-item-0">Deutsch</a>
                <a href="/" class="block px-4 py-2 text-sm" role="menuitem" tabindex="-1"
                   id="menu-item-1">English</a>
            </div>
        </div>
    </div>
</language-dropdown>
<script>
    class LanguageDropdown extends HTMLElement {
        constructor() {
            super();

            const button = this.querySelector('button')!;
            var menuElements = document.getElementById("menu-elements")!;
            var curLanguage = document.getElementById("currentLanguage")!;
            if (location.pathname.split('/')[1] == 'de') {
                curLanguage.innerHTML = 'DE';
            } else {
                curLanguage.innerHTML = 'EN';
            }
            menuElements.style.display = "none";
            button.addEventListener('click', () => {
                if (menuElements.style.display === "none") {
                    menuElements.style.display = "block";
                } else {
                    menuElements.style.display = "none";
                }
            });
        }
    }

    customElements.define('language-dropdown', LanguageDropdown);
</script>
<style>
    .nav-items {
        background: radial-gradient(var(--accent-regular), var(--gray-800) 900%);
        box-shadow: var(--shadow-sm);
        color: var(--accent-text-over);
    }
    .text-white{
        color: white;
    }
    .nav-items1 {
        background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
        transition:
        color var(--theme-transition),
        background-color var(--theme-transition)
    }
</style>
